from src.ui.session_state_keys import SessionStateKeys

class Helper:
    help_messages = {
        SessionStateKeys.ISIN_KEY: "International Securities Identification Number, è un codice internazionale che identifica il titolo.",
        SessionStateKeys.ISSUANCE_DATE_KEY: "La data di emissione di un BOT è la data in cui il titolo viene emesso per la prima volta dal Tesoro italiano. In altre parole, la data di emissione rappresenta la data in cui il BOT viene messo in vendita sul mercato.",
        SessionStateKeys.ISSUANCE_PRICE_KEY: "Il prezzo di emissione di un titolo rappresenta il prezzo iniziale al quale il titolo viene messo in vendita sul mercato, ovvero il prezzo al quale gli investitori possono acquistare il titolo alla sua emissione. In altre parole, il prezzo di emissione rappresenta il valore del titolo al momento della sua prima offerta al pubblico. Questo prezzo di emissione viene fissato dal Tesoro italiano e può variare a seconda delle condizioni di mercato, della durata del titolo e del tasso di interesse offerto.",
        SessionStateKeys.METURITY_DATE_KEY: "La data di scadenza di un BOT rappresenta il momento in cui il titolo cessa di produrre interessi e viene rimborsato dal Tesoro italiano al detentore del titolo stesso. In altre parole, è la data in cui il Tesoro italiano si impegna a rimborsare il valore nominale (100 EUR per ogni BOT) del titolo all'investitore. La data di scadenza viene stabilita al momento dell'emissione del titolo e può variare a seconda della durata del BOT. I BOT italiani hanno di solito una scadenza compresa tra 3 mesi e un anno. È importante tenere presente la data di scadenza quando si investe in un BOT, poiché essa influisce sulla liquidità del titolo e sulla sua capacità di generare rendimenti a lungo termine. Al momento della scadenza, il detentore del titolo riceverà il valore nominale del BOT, indipendentemente dalle variazioni dei tassi di interesse nel corso del periodo di detenzione del titolo.",
        SessionStateKeys.LAST_PRICE_KEY: "Ultima quotazione disponibile per il BOT.",
        SessionStateKeys.PURCHASE_DATE_KEY: "La Data di Acquisto (Regolmento) equivale a due giorni di Borsa successivi alla data in cui la Banca esegue l'ordine se il BOT è acquistato sul Mercato Obbligazionario Telematico (MOT). Se, invece, il BOT è acquistato in Asta allora è uguale alla Data di Emissione. Ad esempio, un BOT acquistato il 27/03/2023 avrà come Data di Regolamento 01/03/2023 ossia due giorni di Borsa successivi.",
        SessionStateKeys.PURCHASE_PRICE_KEY: "Prezzo che l'acquirente paga per acquistare un singolo BOT. Se l'acquisto viene fatto in Asta questo valore coinciderà con il Prezzo di Emissione. Il valore nominale di un BOT è di 100 Euro. Generalmente il Prezzo di Acquisto è inferiore a questo valore per garantire all'acquirente un guadagno dato dalla differenza tra il valore nominale e questo valore. Tuttavia, non bisogna stupirsi di casi (non molto frequenti) in cui questo valore può superare quota 100. Questo valore viene anche detto in gergo Corso Secco o Prezzo Secco.",
        SessionStateKeys.COMMISSIONS_KEY: "È la percentuale di commissioni da pagare alla Banca. Bisogna ricordarsi che se l'acquisto viene fatto in Asta la Banca calcola la percentuale sul Prezzo Nominale (ossia il Lotto), mentre se l'acquisto viene effettuato sul Mercato Obbligazionario Telematico (MOT) la percentuale è calcolata sull'Importo Secco (ossia Prezzo di Acquisto*Lotto/100).",
        SessionStateKeys.MIN_COMMISSIONS_KEY: "Alcune Banche (es. Intesa San Paolo) fissano un valore minimo per le commissioni. Ad esempio, Intesa San Paolo fissa questo valore minimo a 3 Euro. Ciò significa che la Banca, per ogni transazione riceverà almeno 3 Euro di commissione.",
        SessionStateKeys.MAX_COMMISSIONS_KEY: "Alcune Banche (es. Fineco) fissano un valore massimo per le commissioni. Ad esempio, Fineco fissa questo valore massimo a 19 Euro. Ciò significa che la Banca, per ogni transazione riceverà massimo 19 Euro di commissione. Se la tua Banca non applica alcun tetto alle commissioni lascia il campo vuoto.",
        SessionStateKeys.FIXED_COSTS_KEY: "Le Banche oltre alle commissioni spesso chiedono ai propri clienti di pagare alcuni costi fissi. Ad esempio, Intesa San Paolo se acquisti sul Mercato Obbligazionario Telematico (MOT) chiede 3 Euro di costi di intermediazione e 0,5 Euro di costi di eseguito per un totale di 3,50 Euro.",
        SessionStateKeys.LOT_KEY: "È il valore nominale dei BOT che vuoi acquistare. Ad esempio, sappiamo che il valore nominale di un un singolo BOT è di 100 Euro. Quando acquisti un BOT nell'ordine non puoi inserire la quantità, bensì solo il lotto, ossia l'importo nominale in euro. Facciamo un esempio. Supponiamo tu voglia acquistare 50 BOT il cui valore nominale è di 100 Euro. Allora l'importo nominale del tuo investimento sarà di 5000 Euro che è esattamente il valore del Lotto, ossia il valore che dovrai inserire quando farai l'ordine. Ovviamente, il valore effettivo che pagherai sarà inferiore e corrisponde alla quotazione del prezzo del BOT moltiplicato 50. Questo importo è detto in gergo Importo Secco.",
        SessionStateKeys.QUANTITY_KEY: "È la quantità di BOT che hai acquistato. Il valore è calcolato come Quantità=Lotto/100.",
        SessionStateKeys.DURATION_KEY: "È la durata totale del BOT, ossia la differenza (in giorni) tra la Data Scadenza e la Data Emissione. Durata=Data Scadenza - Data Emissione.",
        SessionStateKeys.REMAINING_DURATION_KEY: "È la durata di vita residua del BOT, ossia la differenza (in giorni) tra la Data di Scadenza e la Data di Acquisto (Regolamento). Il valore è calcolato come Durata Residua=Data Scadenza - Data Acquisto.",
        SessionStateKeys.ELAPSED_DURATION_KEY: "È la durata di vita già trascorsa del BOT, ossia la differenza (in giorni) tra la Data di Acquisto e la Data di Emissione. Il valore è calcolato come Durata Trascorsa=Data Acquisto - Data Emissione.",
        SessionStateKeys.THEORIC_PRICE_KEY: "Immaginando una retta di interpolazione che unisce, nel tempo, il Prezzo di Emissione alla Data di Emissione e 100 alla Data di Scadenza, il Prezzo Teorico è il punto della retta con ascisse la Data di Acquisto. Il calcolo di questo Prezzo è importante per capire se l'investimento genera o meno ulteriori plusvalenze da tassare o minusvalenze che possono compensare plusvalenze di altri investimenti. La formula usata è Prezzo Teorico = Prezzo Emissione + (100 - Prezzo Emissioni) * (Durata Trascorsa/Durata).",
        SessionStateKeys.CLEAN_PRICE_KEY: "È il prodotto tra il Prezzo Pagato per la Quantità di BOT Acquistati. Importo Secco = Prezzo di Acquisto * Quantità.",
        SessionStateKeys.TOTAL_COMMISSIONS_KEY: "È il calcolo delle commissioni da pagare alla Banca. Se l'acquisto è in Asta allora la percentuale è calcolata sul Prezzo Nominale altrimenti sul Prezzo di Acquisto. Il Calcolatore calcolerà la percentuale di commissione da pagare applicando eventuali valori minimi, massimi e costi fissi previsti dalla Banca.",
        SessionStateKeys.TAX_KEY: "È l'imposta di legge da pagare sui guadagni del BOT acquistato. La legge italiana prevede una tassazione del 12.5% sul guadagno da pagare immediatamente all'acquisto. Supponendo di acquistare in Asta il calcolo è semplice perché è il 12.5% di (100-Prezzo Emissione)*Quantità. Se si acquista sul Mercato Obbligazionario Telematico (MOT), invece, l'imposta è già stata pagata dall'acquirente precedente per cui bisognerà restituire a quest'ultimo la tassa pagata in base alla Durata Residua. Quindi la formula sarà (100-Prezzo di Acquisto) * Quantità * (Durata Residua/Durata). È importante ricordare che la Durata Residua è calcolata dalla Data di Regolamento ossia due giorni di Borsa successivi alla data di esecuzione dell'ordine.",
        SessionStateKeys.TOTAL_COSTS_KEY: "È l'Importo Totale da pagare alla Banca per acquistare il Lotto di BOT richiesto. Questo è l'importo che vi troverete addebitato sul Conto Corrente quando effettuerete l'ordine. La formula è Importo Totale da Pagare = Importo Secco + Commissioni + Costi Fissi + Imposte.",
        SessionStateKeys.PURCHASE_PRICE_CAPITAL_GAIN_KEY: "",
        SessionStateKeys.REALIZED_GAIN_LOSS_KEY: "",
        SessionStateKeys.REMAINING_GAIN_LOSS_KEY: "",
        SessionStateKeys.TAXABLE_AMOUNT_KEY: "",
        SessionStateKeys.CAPITAL_GAIN_TAX: "",
        SessionStateKeys.REFUNDED_AMOUNT_KEY: "",
        SessionStateKeys.GROSS_TOTAL_GAIN_KEY: "",
        SessionStateKeys.NET_TOTAL_GAIN_KEY: "",
        SessionStateKeys.GROSS_YIELD_KEY: "",
        SessionStateKeys.NET_YIELD_KEY: ""
    }

    @staticmethod
    def get_help(key):
        return Helper.help_messages.get(key, "")